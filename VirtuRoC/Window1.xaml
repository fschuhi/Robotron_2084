<Window x:Class="Robotron.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Robotron"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Name="MyWindow1" Title="AsmLines" Height="800" Width="1300" Left="600" Top="50">
    <!-- xmlns:sys needed for string ConvertParameter (not used anymore, hier nur nachrichtlich drin) -->
    
    <Window.Resources>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <!-- https://social.msdn.microsoft.com/Forums/vstudio/en-US/afb4d846-4660-4936-965f-5afe25e954c4/listboxitem-got-higlighted-on-hover?forum=wpf -->
            <!-- switches off *any* focusing, also the regular line selection => see Trigger below -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}">
                            </ContentPresenter>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
    
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!-- we could have a visual indicator here -->
                    <!--Setter Property="Foreground" Value="Red"/-->
                    <!--Setter Property="Background" Value="Yellow"/-->
                </Trigger>
                <Trigger Property="IsSelected"  Value="True">
                    <!-- make sure we see the selected line -->
                    <!-- Foreground color doesn't work properly, because parts like the opcode have their own coloring which overwrites the default -->
                    <!--Setter Property="Foreground" Value="Red"/-->
                    <Setter Property="Background" Value="CornSilk"/>
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="CornSilk"/>
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- wee need a StaticResource if we want to pass a string as ConverterParameter, see below -->
        <!--sys:String x:Key="Address">Address</-->

        <local:PaddingConverter x:Key="PaddingConverter" />
        <local:IndentConverter x:Key="IndentConverter" />
        <local:OperandConverter x:Key="OperandConverter" />

        <DataTemplate DataType="{x:Type local:AddressItem}">
            <VirtualizingStackPanel Orientation="Horizontal">
                <!-- TextBox Text="{Binding Address}" Padding="-1" Margin="0" BorderThickness="0"/-->
                <!-- see above, we don't pass strings anymore but rather the padding / indentation directly -->
                <!--TextBlock Text="{Binding Address, Converter={StaticResource PaddingConverter}, ConverterParameter={StaticResource Address}}" /-->
                <!-- TextBlock Text="{Binding Instruction, Converter={StaticResource PaddingConverter}, ConverterParameter=6}" Foreground="{Binding InstructionColor}" /-->

                <TextBlock Text=" " Background="LightGray"/>
                <TextBlock local:Attached.FormattedText="{Binding LineStatus}" Width="35" Background="LightGray"/>
                <TextBlock Text=" "/>
                <TextBlock Text="{Binding Address}" />
                <TextBlock Text="{Binding Bytes}" />
                <TextBlock Text="{Binding Label}" />
                <TextBlock Text="{Binding Instruction}" Foreground="{Binding InstructionColor}" />

                <!-- TextBlock local:Attached.FormattedText="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={StaticResource OperandConverter}, ConverterParameter=40}" /-->
                <!--TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={StaticResource OperandConverter}, ConverterParameter=40}" /-->
                <!-- TextBlock Text="{Binding Operand, Converter={StaticResource PaddingConverter}, ConverterParameter=40}" /-->

                <TextBlock local:Attached.FormattedText="{Binding Operand}" />
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="{Binding Comment}" />
                            <Setter Property="Foreground" Value="{Binding CommentColor}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEvaluated}" Value="True" >
                                    <Setter Property="Text" Value="{Binding Evaluation}" />
                                    <Setter Property="Foreground" Value="{Binding EvaluationColor}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <!-- TextBlock Text="{Binding Comment, Converter={StaticResource PaddingConverter}, ConverterParameter=60}" Foreground="LightGray" /-->

            </VirtualizingStackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type local:CommentItem}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text=" " Background="LightGray"/>
                <TextBlock local:Attached.FormattedText="{Binding LineStatus}" Width="35" Background="LightGray" />
                <TextBlock Text=" "/>
                <TextBlock Text="{Binding CommentLine, Converter={StaticResource IndentConverter}, ConverterParameter=20}" Foreground="Green" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <DockPanel>
            <ToolBarTray DockPanel.Dock="Top">
                <ToolBar>
                    <Button Command="New" Content="New" />
                    <Button Command="Open" Content="Open" />
                    <Button Command="Save" Content="Save" />
                </ToolBar>
                <ToolBar>
                    <Button Command="Cut" Content="Cut" />
                    <Button Command="Copy" Content="Copy" />
                    <Button Command="Paste" Content="Paste" />
                </ToolBar>
            </ToolBarTray>
            <TextBox AcceptsReturn="True" />
            <ListBox Name="listBox" 
                     DockPanel.Dock="Bottom"
                     FontFamily="Consolas" FontSize="12" 
                     ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" 
                     KeyDown="listBox_KeyDown"
                     PreviewKeyDown="listBox_PreviewKeyDown"
                     VirtualizingStackPanel.IsVirtualizing="True" 
                     VirtualizingStackPanel.VirtualizationMode="Recycling">
            </ListBox>
        </DockPanel>
        <!--ListBox Name="listBox2" 
                Grid.Column="1"
                FontFamily="Consolas" FontSize="12" >
            <TextBlock Text="sdfasdf" />
        -->
        <!-- HorizontalScrollBarVisibility="Disabled"/-->
        <!-- ScrollViewer.IsDeferredScrollingEnabled="True"-->
    </Grid>
</Window>
